<<<<<<< HEAD
---
- name: tmpfilesystemcheck
  hosts: all
  become: yes
  tasks:
    - name: Check tmp file system and mount type.
      shell: mount |grep /tmp |head -1
      register: tmpfilesystem
      when:
         - ansible_distribution == "Redhat"
         - ansible_distribution_major_version == "6"

    - name: Harden temp RHEL6
      mount: 
        name: /tmp
        src: "{{ tmpfilesystem.stdout.split(' ')[0] }}"
        fstype: "{{ tmpfilesystem.stdout.split(' ')[4] }}" 
        opts: nodev,nosuid,noexec
        state: present
      ignore_errors: yes
      when:
        - ansible_distribution == "Redhat"
        - ansible_distribution_major_version == "6"


    - name: Check filesystem and mounting device for rhel7
      shell: df -T /tmp |grep "/tmp"
      register: tmpinfo
      ignore_errors: yes
      when:
        - ansible_facts['service_mgr'] == "systemd"

    - name: Harden RHEL 7 /tmp filesystem
      ansible.builtin.mount:
          name: /tmp
          src: "{{ tmpinfo.stdout.split(' ')[0] }}"
          fstype: "{{ tmpinfo.stdout.split(' ')[1] }}"
          opts: defaults,nodev,nosuid,noexec
          state: mounted
      ignore_errors: yes
      when:
        - ansible_facts['service_mgr'] == "systemd"

    - name: Mount Filesystem after Harden
      ansible.builtin.shell: mount -o remount /tmp
      ignore_errors: yes
    - name: Checking home partition
      shell: df -T /home|grep "/home"
      register: homeinfo
      ignore_errors: yes
      when:
       - ansible_facts['service_mgr'] == "systemd"
    - name: Hardening home partition
      ansible.builtin.mount:
        name: /home
        src: "{{ homeinfo.stdout.split( ' ')[0] }}"
        fstype: "{{ homeinfo.stdout.split(' ')[4] }}"
        opts: defaults,nodev
        state: mounted
      ignore_errors: yes
      when:
       - ansible_facts['service_mgr'] == "systemd"

    - name: Disable Automatic mounting device
      ansible.builtin.service:
        name: autofs
        enabled: no
        state: stopped
      ignore_errors: yes

    - name: Disable Unused Filesystem- creating file
      ansible.builtin.file:
        name: /etc/modprobe.d/cis.conf
        state: touch
        owner: root
        group: root
        mode: 0644
    - name: Disable unused filesystem
      ansible.builtin.lineinfile:
        name: /etc/modprobe.d/cis.conf
        line: "install {{ item }} /bin/true"
      loop:
         - "cramfs"
         - "freevxfs"
         - "jffs2"
         - "hfs"
         - "hfsplus"
         - "squashfs"
         - "udf"
         - "vfat"

 
=======
---
- name: tmpfilesystemcheck
  hosts: all
  become: yes
  tasks:
    - name: Check tmp file system and mount type.
      shell: mount |grep /tmp |head -1
      register: tmpfilesystem
      when:
         - ansible_distribution == "Redhat"
         - ansible_distribution_major_version == "6"

    - name: Harden temp RHEL6
      mount: 
        name: /tmp
        src: "{{ tmpfilesystem.stdout.split(' ')[0] }}"
        fstype: "{{ tmpfilesystem.stdout.split(' ')[4] }}" 
        opts: nodev,nosuid,noexec
        state: present
      ignore_errors: yes
      when:
        - ansible_distribution == "Redhat"
        - ansible_distribution_major_version == "6"


    - name: Check filesystem and mounting device for rhel7
      shell: df -T /tmp |grep "/tmp"
      register: tmpinfo
      ignore_errors: yes
      when:
        - ansible_facts['service_mgr'] == "systemd"

    - name: Harden RHEL 7 /tmp filesystem
      ansible.builtin.mount:
          name: /tmp
          src: "{{ tmpinfo.stdout.split(' ')[0] }}"
          fstype: "{{ tmpinfo.stdout.split(' ')[1] }}"
          opts: defaults,nodev,nosuid,noexec
          state: mounted
      ignore_errors: yes
      when:
        - ansible_facts['service_mgr'] == "systemd"

    - name: Mount Filesystem after Harden
      ansible.builtin.shell: mount -o remount /tmp
      ignore_errors: yes
    - name: Checking home partition
      shell: df -T /home|grep "/home"
      register: homeinfo
      ignore_errors: yes
      when:
       - ansible_facts['service_mgr'] == "systemd"
    - name: Hardening home partition
      ansible.builtin.mount:
        name: /home
        src: "{{ homeinfo.stdout.split( ' ')[0] }}"
        fstype: "{{ homeinfo.stdout.split(' ')[4] }}"
        opts: defaults,nodev
        state: mounted
      ignore_errors: yes
      when:
       - ansible_facts['service_mgr'] == "systemd"

    - name: Disable Automatic mounting device
      ansible.builtin.service:
        name: autofs
        enabled: no
        state: stopped
      ignore_errors: yes

    - name: Disable Unused Filesystem- creating file
      ansible.builtin.file:
        name: /etc/modprobe.d/cis.conf
        state: touch
        owner: root
        group: root
        mode: 0644
    - name: Disable unused filesystem
      ansible.builtin.lineinfile:
        name: /etc/modprobe.d/cis.conf
        line: "install {{ item }} /bin/true"
      loop:
         - "cramfs"
         - "freevxfs"
         - "jffs2"
         - "hfs"
         - "hfsplus"
         - "squashfs"
         - "udf"
         - "vfat"

 
>>>>>>> 9a8b20ac7e22eabc9985fa99a357323a8ed0f936
